{"version":3,"sources":["components/AdminView.js","components/UserView.js","App.js","index.js"],"names":["AdminView","props","textRef","React","createRef","colorRef","backgroundColorRef","this","addQuote","text","current","value","backgroundColor","state","hex","color","quote","deleteQuote","className","to","quotes","map","key","id","style","padding","onClick","ref","Component","UserView","featuredQuoteIndex","Math","floor","random","length","setInterval","nextIndex","setState","backgroundStyle","quoteStyle","fetchApi","url","options","fetch","process","App","res","json","method","headers","body","JSON","stringify","filter","q","path","paddingLeft","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b433e2c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { SketchPicker } from \"react-color\";\nimport \"./AdminView.css\";\n\nclass AdminView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.textRef = React.createRef();\n        this.colorRef = React.createRef();\n        this.backgroundColorRef = React.createRef();\n    }\n\n    async addQuote() {\n        await this.props.addQuote({\n            text: this.textRef.current.value,\n            backgroundColor: this.backgroundColorRef.current.state.hex,\n            color: this.colorRef.current.state.hex,\n        });\n    }\n\n    async deleteQuote(quote) {\n        await this.props.deleteQuote(quote);\n    }\n\n    render() {\n        return (\n            <div className=\"AdminView\">\n                <Link to=\"/\" className=\"user-link\">user</Link>\n\n                <div className=\"grid\">\n                    <h1 className=\"grid-item-4\" >Daily Quotes</h1>\n\n                    {this.props.quotes.map(quote => (\n                        <>\n                            <div key={quote.id} className=\"grid-item-3\" style={{ backgroundColor: quote.backgroundColor, padding: \"10px\" }}>\n                                <p style={{ color: quote.color }} >\n                                    {quote.text}\n                                </p>\n                            </div>\n                            <div className=\"grid-item-1\">\n                                <button className=\"center\" onClick={() => this.deleteQuote(quote)}>Delete</button>\n                            </div>\n                        </>\n                    ))}\n\n                    <br />\n                    <br />\n                    <br />\n\n                    <h1 className=\"grid-item-4\">Add New Quote</h1>\n\n                    <label className=\"grid-item-1\">\n                        Type Your Quotes Here\n                            <textarea ref={this.textRef} />\n                    </label>\n                    <label className=\"grid-item-1\">\n                        Background Color\n                            <SketchPicker className=\"center\" ref={this.backgroundColorRef} />\n                    </label>\n                    <label className=\"grid-item-1\">\n                        Quotes Color\n                            <SketchPicker className=\"center\" ref={this.colorRef} />\n                    </label>\n                    <button className=\"grid-item-1 center\" onClick={() => this.addQuote()}>Add</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AdminView;\n","import React from \"react\";\nimport \"./UserView.css\";\nimport { Link } from \"react-router-dom\";\n\n\nclass UserView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            featuredQuoteIndex: Math.floor(Math.random() * this.props.quotes.length),\n        };\n        setInterval(() => {\n            const nextIndex = (this.state.featuredQuoteIndex + 1) % this.props.quotes.length;\n            this.setState({\n                featuredQuoteIndex: nextIndex\n            });\n        }, 5000);\n    }\n\n    render() {\n        const quote = this.props.quotes[this.state.featuredQuoteIndex];\n        const backgroundStyle = { backgroundColor: quote ? quote.backgroundColor : \"white\" };\n        const quoteStyle = { color: quote ? quote.color : \"black\" };\n        return (\n\n            <div className=\"UserView\" style={backgroundStyle}>\n                <Link to=\"/admin\" className=\"admin-link\">admin</Link>\n\n                <h1 className=\"quote\" style={quoteStyle}>\n                    {quote ? quote.text : \"Please add quote(s) in admin view\"}\n                </h1>\n            </div>\n        );\n    }\n}\n\nexport default UserView;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport AdminView from \"./components/AdminView\";\nimport UserView from \"./components/UserView\";\nimport \"./App.css\";\n\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:3001\";\n\nfunction fetchApi(url, options) {\n  return fetch(BASE_URL + url, options);\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: [],\n    };\n  }\n\n  async componentDidMount() {\n    const res = await fetchApi(\"/quote\");\n    this.setState({\n      quotes: await res.json(),\n    });\n  }\n\n  async addQuote(quote) {\n    const res = await fetchApi(\"/quote\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(quote),\n    });\n    this.setState({\n      quotes: [...this.state.quotes, await res.json()],\n    });\n  }\n\n  async deleteQuote(quote) {\n    await fetchApi(`/quote/${quote.id}`, {\n      method: \"DELETE\",\n    })\n    this.setState({\n      quotes: this.state.quotes.filter(q => q.id !== quote.id),\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path=\"/admin\">\n            <div style={{paddingLeft: \"50px\"}}>\n            <AdminView\n              quotes={this.state.quotes}\n              addQuote={quote => this.addQuote(quote)}\n              deleteQuote={quote => this.deleteQuote(quote)}\n            />\n            </div>\n          </Route>\n          <Route path=\"/\">\n            <UserView quotes={this.state.quotes} />\n          </Route>\n        </Switch>\n      </Router>\n    )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}